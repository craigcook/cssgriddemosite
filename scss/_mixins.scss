// Mixins
// --------
// Mixins allow you to define styles that can be re-used / throughout the
// stylesheet without needing to resort to / non-semantic classes like .float-
// left. Mixins can also / contain full CSS rules, and anything else allowed /
// elsewhere in a Sass document. They can even take / arguments which allows you
// to produce a wide variety / of styles with very few mixins.

// For complete documentation:
// Sass mixins: http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#mixins

@mixin element-invisible {
  position: absolute !important;
  clip: rect(1px, 1px, 1px, 1px);
  overflow: hidden;
  height: 1px;
  width: 1px;
  word-wrap: normal;
}

@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

@mixin element-focusable {
  @include element-invisible;
  &:active,
  &:focus {
    @include element-invisible-off;
  }
}
